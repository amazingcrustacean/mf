option(noredefine);option(noloadLib);option(redSB);//option(prot);
LIB "blow.lib";
LIB "linkhom.lib";
LIB "matrix.lib";
LIB "control.lib";
LIB "mfweb.lib";
ring rr=0,(x(1..12)),dp;
int N = 2; // The N in sl(N) link homology
printlevel = 1;

list borromeanRings = linkLibrary("borromeanRings");

list h = linkCompile(borromeanRings, "data-borromeanRings-N" + string(N) + "-zoom.mp", N);

N = 2;

list cp = KRcomplex(borromeanRings, h, N);

ring ss=(0,q,t),(x),dp;
list cp = imap(rr,cp);
list cohom = computeCohomology(cp);
number euler = gradedEuler(cohom,q);
euler;

number poincare = gradedPoincare(cohom, q, t);
print("");print("The graded Poincare polynomial is given by " + string(poincare));

print("");

N;
