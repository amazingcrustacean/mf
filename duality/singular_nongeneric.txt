Singular session for examining the superpotential W = x2y + y2z + xz2
=====================================================================

LIB "homolog.lib";
LIB "dualitytrace.lib";
LIB "matrix.lib";
printlevel = 1;

ring S = 0,(x,y,z),dp;

matrix f1[1][1] = y;
matrix g1[1][1] = x2;
matrix f2[1][1] = z;
matrix g2[1][1] = y2;
matrix f3[1][1] = z2;
matrix g3[1][1] = x;

matrix F1 = MFtensorF(f1,g1,f2,g2);
matrix G1 = MFtensorG(f1,g1,f2,g2);

matrix F = MFtensorF(F1,G1,f3,g3);
matrix G = MFtensorG(F1,G1,f3,g3);

matrix zero[4][4];
matrix Q = blockmat(zero,G,F,zero);
matrix E[4][4]; E = E+ 1;

// Verify that this is a MF of W = x2y + y2z + xz2

print(Q*Q - (x2y+y2z+xz2)*unitmat(8));

// Compute a set of generators for the space of morphisms from (G,F) to (-F, -G)
list endos = MFcohom(F,G,-G,-F);
list basis = list_vectortoblock(endos,ncols(F));

matrix grad = blockmat(zero,E,E,zero);

// Verify that we actually have morphisms
int i;
for( i = 1; i <= 4; i++ )
{
basis[i] = grad * basis[i];
print("Next");
print( basis[i] * Q + Q * basis[i] );
}

// Verifying that the partial derivatives of W form a sop
matrix d[3][3] = -8/9xz, x2-2/9yz, 4/9z2, -8/9yz, 4/9z2, y2-2/9xz, z2-2/9xy, -8/9zx, 4/9x2;
poly W = x2y + y2z + xz2;
matrix diffW[3][1] = diff(W,x), diff(W,y), diff(W,z);
print(d * diffW);

poly dete = det(d);

matrix T1 = diff(Q,x) * diff(Q,y) * diff(Q,z);
matrix T2 = diff(Q,y) * diff(Q,x) * diff(Q,z);

list str1, str2;

for( i = 1; i <= 4; i++ )
{
str1[i] = supertrace( basis[i] * T1, 4 );
str2[i] = supertrace( basis[i] * T2, 4 );
}





// OLD and WRONG

matrix sg1_ul[4][4] = 0,0,0,0,4/9x2-8/81y2-178/729y2, 0, 2/9z3-89/729xyz-4/81xy2+8/729yz2+128/729y3+2/9x3, 16/729z2-178/729xz-8/81xy+256/729y2,-356/729y,0,4/9z2+16/729yz-178/729xy+4/9x2,32/729z-356/729x,0,0,0,-356/729z-16/81y;
matrix sg1_lr[4][4] = 0,0,0,0,0,-16/81y-356/729z,0,-16/729z2-178/729xz-256/729y2+8/81xy,0,-712/729,0,-32/729z + 356/729x,0,356/729y,-178/729yz - 8/81yz+4/9x2, 4/9z2+16/729zy - 178/729xy;
matrix sg1 = blockmat(sg1_ul, zero, zero, sg1_lr);

matrix sg2_ul[4][4];
matrix sg2_lr[4][4];

sg2_ul[2,3] = -2/9z3 -8/729yz2+89/729xyz-128/729y3+4/81xy2-2/9x3;
sg2_ul[2,4] = -16/729z2+(2*89)/729xz-(2*128)/729y2+8/81xy;
sg2_ul[3,3] = -4/9z2-(2*8)/729yz+(2*89)/729xy;
sg2_ul[3,4] = -(4*8)/729z+(4*89)/729x;
sg2_ul[4,2] = -(4*89)/729y;
sg2_ul[4,3] = (2*89)/729yz+8/81y2-4/9x2;
sg2_ul[4,4] = (4*89)/729z+16/81y;

sg2_lr[2,1] = (2*89)/729yz+8/81y2-4/9x2;
sg2_lr[2,2] = (4*89)/729z+16/81y;
sg2_lr[2,4] = (2*8)/729z2 - (2*89)/729xz+(2*128)/729yz-8/81xy;
sg2_lr[3,1] = (4*89)/729y;
sg2_lr[3,2] = (8*89)/729;
sg2_lr[3,4] = (4*8)/729z - (4*89)/729x;
sg2_lr[4,4] = -4/9z2-(2*8)/729yz+(2*89)/729xy;

matrix sg2 = blockmat(sg2_ul,zero,zero,sg2_lr);
sg2 = -1 * sg2;

// THe two traces disagree
singtrace(basis[4],sg1);
singtrace(basis[4],sg2);