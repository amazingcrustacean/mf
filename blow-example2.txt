//////////////////////////////////////////////////////////////////////////////////////
// EXAMPLE 3 (identity defect acting on (x2,x))
//////////////////////////////////////////////////////////////////////////////////////

// Matrices are written ( 0 g \\ f 0 ).

option(noredefine);option(noloadLib);option(redSB);
LIB "blow.lib";
LIB "matrix.lib";
int nx=1;
int ny=1;
ring rr=(0,eta),(x(1..nx),y(1..ny)),dp;
poly W = x(1)^3;

// Define X, Y and D = Y x X:

matrix X[2][2] = 0, x(1), x(1)^2, 0;
matrix Y[2][2] = 0, y(1) - x(1), x(1)^2 + x(1) * y(1) + y(1)^2, 0;
matrix D = MFtensor(Y,X);

matrix Dblow = mablow(D,W); // Blow up D using Jac(W)
list l = MFreduce(Dblow,1);
matrix RD = l[1]; // Compute the reduced form over k[y]
matrix F = l[2]; // A homotopy equivalence F: Dblow -> RD
matrix G = l[3]; // A homotopy equivalence G: RD -> Dblow

matrix dq = dQ(X, W, nx, 3); // This is dQ_X: 
matrix iddQ = ZZtensor( unitmat(2), dq ); // "iddQ" is "id x dQ_X"
matrix delQ = deltaQ(D, W, nx, 3); // This is deltaQ_D

// And finally the idempotent e on Dblow
matrix e = 1/3 * iddQ * delQ;

// The corresponding idempotent on RD is
matrix ep = F * e * G;
print(ep);
