option(noredefine);option(noloadLib);option(redSB);//option(prot);
LIB "blow.lib";
LIB "linkhom.lib";
LIB "matrix.lib";
LIB "control.lib";
LIB "mfweb.lib";
ring rr=0,(x(1..8)),dp;
int N = 3; // The N in sl(N) link homology
printlevel = 1;

list solomon = linkLibrary("solomon");

// N=3 RUNNING on haydn since 2010-10-12--10:39:
list h = linkCompile(solomon, "solomon-N" + string(N) + "-zoom.mp", N);

list cp = KRcomplex(solomon, h, N);

ring ss=(0,q,t),(x),dp;
list cp = imap(rr,cp);
list cohom = computeCohomology(cp);
number euler = gradedEuler(cohom,q);
euler;

// The KR homology is described by its Poincare polynomial
number poincare = gradedPoincare(cohom, q, t);
poincare;

// N = 2 (took 284140ms):
// (q10+q8t+q8+q4t2+q2t4+t4)/(q10)
// Agrees with by-hand Jones polynomial calculation, and with integral Khovanov homology
// tensor Q (from the Knot atlas) after q <--> 1/q.

// N = 3 (took 391120ms):
// (q14+q12+q10t2+q10+q8t2+q6t4+2q4t4+q4t3+2q2t4+q2t3+t4)/(q18)
// This was done with the old implementation of the link; now rerunning...