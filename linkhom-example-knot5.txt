option(noredefine);option(noloadLib);option(redSB);
LIB "blow.lib";
LIB "linkhom.lib";
LIB "matrix.lib";
LIB "control.lib";
ring rr=(0,q,t),(x),dp;
int N = 2; // The N in sl(N) link homology
printlevel = 1;

// Define the underlying web of the 5 crossing knot
intvec edgevec(1) = 1,2,3,4;
intvec edgevec(2) = 4,3,5,6;
intvec edgevec(3) = 6,5,7,8;
intvec edgevec(4) = 8,7,9,10;
intvec edgevec(5) = 10,9,2,1;

// Define which vertices are overcrossings (+1) and which are undercrossings (-1):
intvec vertexParity = -1,-1,-1,-1,-1;

// Define the link as a list (see linkhom.lib preceding mfCompileLink)
list theLink = vertexParity, list(edgevec(1),edgevec(2),edgevec(3),edgevec(4),edgevec(5));

// Compute the euler characteristic
list h = mfCompileLink(theLink, "5-data", 1, N);
// Freezes at / ** Interrupt at cmd:`minbase` in line:'matrix f0 = minbase(ker0); // TODO: minbase is recent change, requires testing'


list cp = KRcomplex(theLink, h);
list cohom = computeCohomology(cp);
number euler = gradedEuler(cohom,q);