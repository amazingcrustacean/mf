Example session for E6 curve singularity
========================================

This example was developed in our E6tot notes, and in earlier Singular
example sessions. This session uses the most "modern" technology, in the
sense that we use the block matrix approach and a trace formula derived
from our most recent work. See p.21 and onwards of E6tot.

LIB "homolog.lib";
LIB "linalg.lib";
LIB "dualitytrace.lib";
ring S = 0,(x,y),dp;

printlevel = 1;

matrix xi[4][4] = x,y2,0,y,y2,-x2,-xy,0,0,0,x2,y2,0,0,y2,-x;
matrix eta[4][4] = x2,y2,0,xy,y2,-x,-y,0,0,0,x,y2,0,0,y2,-x2;
matrix z[4][4];

matrix sg_ul[4][4] = 0,-4y,0,0,2xy,0,0,0,0,2y2,0,-2xy,y2,-2x,4y,0;
matrix sg_br[4][4] = 0,2xy,0,0,-4y,0,0,0,-2x,-y2,0,4y,-2y2,0,-2xy,0;
matrix sg_block[8][8] = blockmat(sg_ul,z,z,sg_br); 
sg_block = 1/12 * sg_block;

list basis = compute_basis_endospace_block(eta,xi,sg_block);

// When I run this, the basis I get ALMOST agrees with the basis on p.15 of E6tot
//
// basis[1] = epsilon_1
// basis[2] = Id
// basis[3] = nu_1
// basis[4] = tau_1
// basis[5] = gamma
// basis[6] = epsilon_2
// basis[7] = tau_2
// basis[8] = delta
// basis[9] = nu_2
// basis[10] = tau_3
// basis[11] = 
// basis[12] = y . delta
//
// But it is missing the most important morphism, y . gamma!

singtrace(y * basis[5], sg_block);

int i;
for(i=1;i<=12;i++)
{
singtrace(basis[i],sg_block);
}