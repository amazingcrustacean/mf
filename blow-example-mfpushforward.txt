//////////////////////////////////////////////////////////////////////////////////////
// EXAMPLE - Tensoring (x,x2) with a factorisation of y^5 - x^3, using mfPushforward
//////////////////////////////////////////////////////////////////////////////////////

// This is the old blow-example-An.txt redone with mfPushforward instead of fuseDefects

option(noredefine);option(noloadLib);option(redSB);
LIB "blow.lib";
LIB "matrix.lib";
ring rr=0,(x(1),y(1)),dp;

poly W = x(1)^3; // X is a MF of W
poly V = y(1)^5 - x(1)^3; // Y is a MF of V

// Define X, Y and D = Y x X:
matrix X[2][2] = 0, x(1)^2, x(1), 0;

// Y is a factorisation of V, which we consider as a functor between MF(W) and MF(y(1)^5).
matrix Y0[2][2] = -x(1), y(1), -y(1)^4, x(1)^2;
matrix Y1[2][2] = x(1)^2, -y(1), y(1)^4, -x(1);
matrix z[2][2];
matrix Y = blockmat(z,Y1,Y0,z);

matrix D = MFtensor(Y,X);
matrix H = 1/3 * ZZtensor(unitmat(ncols(Y)),diff(X,x(1)));

// H is a homotopy between x(1)^2 and zero on D
H * D + D * H == x(1)^2 * unitmat(ncols(D));

// The tuple D, x(1), 2, H satisfies all the conditions for mfPushforward:
list l = mfPushforward(D, x(1), 2, H);
print(l[1]);

// We get two copies of (y(1),y(1)^4), which agrees with the earlier calculation in blow-example-An.txt
