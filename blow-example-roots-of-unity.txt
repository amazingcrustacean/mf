//////////////////////////////////////////////////////////////////////////////////////
// EXAMPLE R1 - Identity defect acting on (x,x^4)
//////////////////////////////////////////////////////////////////////////////////////

option(noredefine);option(noloadLib);option(redSB);
LIB "blow.lib";
LIB "matrix.lib";
int nx=1;
int ny=1;
ring rr=(0,r),(x(1..nx),y(1..ny)),dp;
minpoly = rootofUnity(5);
poly minpolyblow = x(1)^4+x(1)^3+x(1)^2+x(1)+1;

int baa=5;
poly W = x(1)^baa;

// Define X, Y and D = Y x X:
matrix fY[1][1] = y(1)-x(1); 
matrix gY[1][1] = (y(1)^5 - x(1)^5)/(y(1)-x(1));
matrix fX[1][1] = x(1); 
matrix gX[1][1] = x(1)^4;
matrix fD = MFtensorF(fY,gY,fX,gX);
matrix gD = MFtensorG(fY,gY,fX,gX);
matrix n1[1][1];
matrix n2[2][2];
matrix X = blockmat(n1,gX,fX,n1);
matrix Y = blockmat(n1,gY,fY,n1);
matrix D = blockmat(n2,gD,fD,n2);

list l = fuseDefects(Y, X, W);
matrix RD = l[1]; // Reduced inflation of Y x X
matrix ep = l[2]; // Idempotent endomorphism of RD
print(ep * ep - ep); // is ep is an idempotent "on the nose"?

matrix final = mfSuspend( mfSplitIdempotent(RD, ep), nx );
print(final);

// Note this gives the suspension of X, but that's OK because Y is not the identity defect,
// it is the suspension of the identity defect.

//////////////////////////////////////////////////////////////////////////////////////
// EXAMPLE R2 - 2-variable example, defect is not the identity defect!
//////////////////////////////////////////////////////////////////////////////////////

option(noredefine);option(noloadLib);option(redSB);
LIB "blow.lib";
LIB "matrix.lib";
int nx=2;
int ny=2;
ring rr=(0,r),(x(1..nx),y(1..ny)),dp;
minpoly = rootofUnity(5);
poly minpolyblow = x(1)^4+x(1)^3+x(1)^2+x(1)+1;

int baa=5;
poly W = x(1)^baa + x(2)^baa;

// Define X, Y and D = Y x X:

matrix X[2][2] = 0, x(1) + r^2 * x(2), (x(1)^baa + x(2)^baa)/(x(1) + r^2 * x(2)), 0;
matrix Y1[2][2] = 0, x(1) + r^3 * x(2), -(x(1)^baa + x(2)^baa)/(x(1) + r^3 * x(2)), 0;
matrix Y2[2][2] = 0, y(1) + r^4 * y(2), (y(1)^baa + y(2)^baa)/(y(1) + r^4 * y(2)), 0;
matrix Y = MFtensor(Y1, Y2);

list l = fuseDefects(Y, X, W);
matrix RD = l[1]; // Reduced inflation of Y x X
matrix ep = l[2]; // Idempotent endomorphism of RD
print(ep * ep - ep); // is ep is an idempotent "on the nose"?

matrix final = mfSuspend( mfSplitIdempotent(RD, ep), nx );
print(final);

print(final - Y2); // Answer is that Y x X is Y2, as expected


///// OLD COMPUTATION OF HOMS, kept for reference //////
LIB "homolog.lib";
ring S = (0,r),(x(1),x(2)),ds;
minpoly = rootofUnity(5);

int baa=5;
poly W = x(1)^baa + x(2)^baa;

ideal I = W;
qring A = std(I);

// Define M to be the Cokernel of X (i.e. the odd differential) and N the cokernel of Y1d
module M = [x(1) + r^2 * x(2)];
module N = [x(1) + r^3 * x(2)];
module Nsusp = [(x(1)^baa + x(2)^baa)/(x(1) + r^3 * x(2))]; // Suspension of N
isCM(M); isCM(N); // Verify they are CM

Ext(2,N,M,1); // Ext^2(M,N) = Homs in stable category of CMs from N to M

// The output is that the Krull dimension is -1 (i.e. the space is zero) so there are no nontrivial
// morphisms in the stable category from N to M. But

Ext(2,Nsusp,M,1);

// The output is that this is one-dimensional.

print(final - Y2); // Answer is that Y x X is Y2, as expected

/////////////////////////////////////////////////////////
// EXAMPLE R3 - Example showing something fishy with parameters
/////////////////////////////////////////////////////////

option(noredefine);option(noloadLib);option(redSB);
LIB "blow.lib";
LIB "matrix.lib";
int nx=2;
int ny=1;
ring rr=(0,r),(x(1..nx),y(1..ny)),dp;
minpoly = rootofUnity(5);
poly minpolyblow = x(1)^4+x(1)^3+x(1)^2+x(1)+1;

int baa=2;
poly W = x(1)^baa + x(2)^baa;

// Define X, Y and D = Y x X:
matrix X[2][2] = 0, x(1) + r^2 * x(2), (x(1)^baa + x(2)^baa)/(x(1) + r^2 * x(2)), 0;

list l = compileFoam(MFdual(X), X, W);
matrix RD = l[1]; // Reduced inflation of Y x X
matrix ep = l[2]; // Idempotent endomorphism of RD
print(ep * ep - ep); // is ep is an idempotent "on the nose"?

///////// SOMETHING WRONG HERE /////////

// Doesn't seem Hep is idempotent on the nose. But this can't be so, as it is an idempotent
// endomorphism of a complex RD with zero differential, so homotopy endos must be equal.
