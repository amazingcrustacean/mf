option(noredefine);option(noloadLib);option(redSB);
LIB "blow.lib";
LIB "mfweb.lib";
LIB "fusion-temp.lib";
printlevel=1;
ring R1=(0,r),(x(1..2),y(1..4)),dp;
minpoly = rootofUnity(20); 
poly minpolyblow = 1 - x(1)^2 + x(1)^4 - x(1)^6 + x(1)^8;

// Definition of Superpotentials

poly W1y12=(y(1)^2 - 2*y(2))*(y(1)^8 - 8*y(1)^6*y(2) + 19*y(1)^4*y(2)^2 - 12*y(1)^2*y(2)^3 + y(2)^4);

poly W2x12=x(1)^10 + x(2)^10;

poly W3y34=y(3)^10 + y(4)^10;

// Defect No. 1:

matrix x12Dy12[4][4]=0, 0, x(1) + x(2) - y(1), x(1)*x(2) - y(2),0, 0, -2*x(1)^4*x(2)^4 + 25*x(1)^3*x(2)^3*y(1)^2 - 50*x(1)^2*x(2)^2*y(1)^4 + 35*x(1)*x(2)*y(1)^6 - 10*y(1)^8 - 2*x(1)^3*x(2)^3*y(2) + 25*x(1)^2*x(2)^2*y(1)^2*y(2) - 50*x(1)*x(2)*y(1)^4*y(2) + 35*y(1)^6*y(2) - 2*x(1)^2*x(2)^2*y(2)^2 + 25*x(1)*x(2)*y(1)^2*y(2)^2 - 50*y(1)^4*y(2)^2 - 2*x(1)*x(2)*y(2)^3 + 25*y(1)^2*y(2)^3 - 2*y(2)^4, -x(1)^9 + x(1)^8*x(2) - x(1)^7*x(2)^2 + x(1)^6*x(2)^3 - x(1)^5*x(2)^4 - x(1)^4*x(2)^5 + x(1)^3*x(2)^6 - x(1)^2*x(2)^7 + x(1)*x(2)^8 - x(2)^9 - x(1)^8*y(1) + 2*x(1)^7*x(2)*y(1) - 3*x(1)^6*x(2)^2*y(1) + 4*x(1)^5*x(2)^3*y(1) - 5*x(1)^4*x(2)^4*y(1) + 4*x(1)^3*x(2)^5*y(1) - 3*x(1)^2*x(2)^6*y(1) + 2*x(1)*x(2)^7*y(1) - x(2)^8*y(1) - x(1)^7*y(1)^2 + 3*x(1)^6*x(2)*y(1)^2 - 6*x(1)^5*x(2)^2*y(1)^2 + 10*x(1)^4*x(2)^3*y(1)^2 + 10*x(1)^3*x(2)^4*y(1)^2 - 6*x(1)^2*x(2)^5*y(1)^2 + 3*x(1)*x(2)^6*y(1)^2 - x(2)^7*y(1)^2 - x(1)^6*y(1)^3 + 4*x(1)^5*x(2)*y(1)^3 - 10*x(1)^4*x(2)^2*y(1)^3 + 20*x(1)^3*x(2)^3*y(1)^3 - 10*x(1)^2*x(2)^4*y(1)^3 + 4*x(1)*x(2)^5*y(1)^3 - x(2)^6*y(1)^3 - x(1)^5*y(1)^4 + 5*x(1)^4*x(2)*y(1)^4 - 15*x(1)^3*x(2)^2*y(1)^4 - 15*x(1)^2*x(2)^3*y(1)^4 + 5*x(1)*x(2)^4*y(1)^4 - x(2)^5*y(1)^4 - x(1)^4*y(1)^5 + 6*x(1)^3*x(2)*y(1)^5 - 21*x(1)^2*x(2)^2*y(1)^5 + 6*x(1)*x(2)^3*y(1)^5 - x(2)^4*y(1)^5 - x(1)^3*y(1)^6 + 7*x(1)^2*x(2)*y(1)^6 + 7*x(1)*x(2)^2*y(1)^6 - x(2)^3*y(1)^6 - x(1)^2*y(1)^7 + 8*x(1)*x(2)*y(1)^7 - x(2)^2*y(1)^7 - x(1)*y(1)^8 - x(2)*y(1)^8 - y(1)^9,x(1)^9 - x(1)^8*x(2) + x(1)^7*x(2)^2 - x(1)^6*x(2)^3 + x(1)^5*x(2)^4 + x(1)^4*x(2)^5 - x(1)^3*x(2)^6 + x(1)^2*x(2)^7 - x(1)*x(2)^8 + x(2)^9 + x(1)^8*y(1) - 2*x(1)^7*x(2)*y(1) + 3*x(1)^6*x(2)^2*y(1) - 4*x(1)^5*x(2)^3*y(1) + 5*x(1)^4*x(2)^4*y(1) - 4*x(1)^3*x(2)^5*y(1) + 3*x(1)^2*x(2)^6*y(1) - 2*x(1)*x(2)^7*y(1) + x(2)^8*y(1) + x(1)^7*y(1)^2 - 3*x(1)^6*x(2)*y(1)^2 + 6*x(1)^5*x(2)^2*y(1)^2 - 10*x(1)^4*x(2)^3*y(1)^2 - 10*x(1)^3*x(2)^4*y(1)^2 + 6*x(1)^2*x(2)^5*y(1)^2 - 3*x(1)*x(2)^6*y(1)^2 + x(2)^7*y(1)^2 + x(1)^6*y(1)^3 - 4*x(1)^5*x(2)*y(1)^3 + 10*x(1)^4*x(2)^2*y(1)^3 - 20*x(1)^3*x(2)^3*y(1)^3 + 10*x(1)^2*x(2)^4*y(1)^3 - 4*x(1)*x(2)^5*y(1)^3 + x(2)^6*y(1)^3 + x(1)^5*y(1)^4 - 5*x(1)^4*x(2)*y(1)^4 + 15*x(1)^3*x(2)^2*y(1)^4 + 15*x(1)^2*x(2)^3*y(1)^4 - 5*x(1)*x(2)^4*y(1)^4 + x(2)^5*y(1)^4 + x(1)^4*y(1)^5 - 6*x(1)^3*x(2)*y(1)^5 + 21*x(1)^2*x(2)^2*y(1)^5 - 6*x(1)*x(2)^3*y(1)^5 + x(2)^4*y(1)^5 + x(1)^3*y(1)^6 - 7*x(1)^2*x(2)*y(1)^6 - 7*x(1)*x(2)^2*y(1)^6 + x(2)^3*y(1)^6 + x(1)^2*y(1)^7 - 8*x(1)*x(2)*y(1)^7 + x(2)^2*y(1)^7 + x(1)*y(1)^8 + x(2)*y(1)^8 + y(1)^9, x(1)*x(2) - y(2), 0, 0,-2*x(1)^4*x(2)^4 + 25*x(1)^3*x(2)^3*y(1)^2 - 50*x(1)^2*x(2)^2*y(1)^4 + 35*x(1)*x(2)*y(1)^6 - 10*y(1)^8 - 2*x(1)^3*x(2)^3*y(2) + 25*x(1)^2*x(2)^2*y(1)^2*y(2) - 50*x(1)*x(2)*y(1)^4*y(2) + 35*y(1)^6*y(2) - 2*x(1)^2*x(2)^2*y(2)^2 + 25*x(1)*x(2)*y(1)^2*y(2)^2 - 50*y(1)^4*y(2)^2 - 2*x(1)*x(2)*y(2)^3 + 25*y(1)^2*y(2)^3 - 2*y(2)^4, -x(1) - x(2) + y(1), 0, 0;

// Defect No.2:

matrix y34D1x12[4][4]=0, 0, -x(1) - x(2) + y(3) + y(4)*r^2, -(x(1)*x(2)) + y(3)*y(4)*r^2,0, 0, -10*x(1)^8 - 45*x(1)^7*x(2) - 120*x(1)^6*x(2)^2 - 210*x(1)^5*x(2)^3 - 252*x(1)^4*x(2)^4 - 210*x(1)^3*x(2)^5 - 120*x(1)^2*x(2)^6 - 45*x(1)*x(2)^7 - 10*x(2)^8 + (35*x(1)^6 + 160*x(1)^5*x(2) + 350*x(1)^4*x(2)^2 + 448*x(1)^3*x(2)^3 + 350*x(1)^2*x(2)^4 + 160*x(1)*x(2)^5 + 35*x(2)^6)*y(3)*y(4)*r^2 - (5*x(1)^2 + 8*x(1)*x(2) + 5*x(2)^2)*(10*x(1)^2 + 19*x(1)*x(2) + 10*x(2)^2)*y(3)^2*y(4)^2*r^4 + (25*x(1)^2 + 48*x(1)*x(2) + 25*x(2)^2)*y(3)^3*y(4)^3*r^6 - 2*y(3)^4*y(4)^4*r^8, -((x(1) + x(2) + y(3) + y(4)*r^2)*(x(1)^4 + 4*x(1)^3*x(2) + 6*x(1)^2*x(2)^2 + 4*x(1)*x(2)^3 + x(2)^4 + x(1)^3*y(3) + 3*x(1)^2*x(2)*y(3) + 3*x(1)*x(2)^2*y(3) + x(2)^3*y(3) + x(1)^2*y(3)^2 + 2*x(1)*x(2)*y(3)^2 + x(2)^2*y(3)^2 + x(1)*y(3)^3 + x(2)*y(3)^3 + y(3)^4 + ((x(1) + x(2))^3 - 3*(x(1) + x(2))^2*y(3) - 2*(x(1) + x(2))*y(3)^2 - y(3)^3)*y(4)*r^2 + (x(1) + x(2) - y(3))^2*y(4)^2*r^4 + (x(1) + x(2) - y(3))*y(4)^3*r^6 + y(4)^4*r^8)*(x(1)^4 + 4*x(1)^3*x(2) + 6*x(1)^2*x(2)^2 + 4*x(1)*x(2)^3 + x(2)^4 - x(1)^3*y(3) - 3*x(1)^2*x(2)*y(3) - 3*x(1)*x(2)^2*y(3) - x(2)^3*y(3) + x(1)^2*y(3)^2 + 2*x(1)*x(2)*y(3)^2 + x(2)^2*y(3)^2 - x(1)*y(3)^3 - x(2)*y(3)^3 + y(3)^4 - ((x(1) + x(2))^3 + 3*(x(1) + x(2))^2*y(3) - 2*(x(1) + x(2))*y(3)^2 + y(3)^3)*y(4)*r^2 + (x(1) + x(2) + y(3))^2*y(4)^2*r^4 - (x(1) + x(2) + y(3))*y(4)^3*r^6 + y(4)^4*r^8)),(x(1) + x(2) + y(3) + y(4)*r^2)*(x(1)^4 + 4*x(1)^3*x(2) + 6*x(1)^2*x(2)^2 + 4*x(1)*x(2)^3 + x(2)^4 + x(1)^3*y(3) + 3*x(1)^2*x(2)*y(3) + 3*x(1)*x(2)^2*y(3) + x(2)^3*y(3) + x(1)^2*y(3)^2 + 2*x(1)*x(2)*y(3)^2 + x(2)^2*y(3)^2 + x(1)*y(3)^3 + x(2)*y(3)^3 + y(3)^4 + ((x(1) + x(2))^3 - 3*(x(1) + x(2))^2*y(3) - 2*(x(1) + x(2))*y(3)^2 - y(3)^3)*y(4)*r^2 + (x(1) + x(2) - y(3))^2*y(4)^2*r^4 + (x(1) + x(2) - y(3))*y(4)^3*r^6 + y(4)^4*r^8)*(x(1)^4 + 4*x(1)^3*x(2) + 6*x(1)^2*x(2)^2 + 4*x(1)*x(2)^3 + x(2)^4 - x(1)^3*y(3) - 3*x(1)^2*x(2)*y(3) - 3*x(1)*x(2)^2*y(3) - x(2)^3*y(3) + x(1)^2*y(3)^2 + 2*x(1)*x(2)*y(3)^2 + x(2)^2*y(3)^2 - x(1)*y(3)^3 - x(2)*y(3)^3 + y(3)^4 - ((x(1) + x(2))^3 + 3*(x(1) + x(2))^2*y(3) - 2*(x(1) + x(2))*y(3)^2 + y(3)^3)*y(4)*r^2 + (x(1) + x(2) + y(3))^2*y(4)^2*r^4 - (x(1) + x(2) + y(3))*y(4)^3*r^6 + y(4)^4*r^8), -(x(1)*x(2)) + y(3)*y(4)*r^2, 0, 0,-10*x(1)^8 - 45*x(1)^7*x(2) - 120*x(1)^6*x(2)^2 - 210*x(1)^5*x(2)^3 - 252*x(1)^4*x(2)^4 - 210*x(1)^3*x(2)^5 - 120*x(1)^2*x(2)^6 - 45*x(1)*x(2)^7 - 10*x(2)^8 + (35*x(1)^6 + 160*x(1)^5*x(2) + 350*x(1)^4*x(2)^2 + 448*x(1)^3*x(2)^3 + 350*x(1)^2*x(2)^4 + 160*x(1)*x(2)^5 + 35*x(2)^6)*y(3)*y(4)*r^2 - (5*x(1)^2 + 8*x(1)*x(2) + 5*x(2)^2)*(10*x(1)^2 + 19*x(1)*x(2) + 10*x(2)^2)*y(3)^2*y(4)^2*r^4 + (25*x(1)^2 + 48*x(1)*x(2) + 25*x(2)^2)*y(3)^3*y(4)^3*r^6 - 2*y(3)^4*y(4)^4*r^8, x(1) + x(2) - y(3) - y(4)*r^2, 0, 0;


matrix defect1 = x12Dy12;
matrix defect2 = y34D1x12;
poly W1 = W1y12;
poly W2 = W2x12;
poly W3 = W3y34;


ring R2=(0,r),(x(1..4),y(1..6)),dp;
minpoly = rootofUnity(20); 
poly minpolyblow = 1 - x(1)^2 + x(1)^4 - x(1)^6 + x(1)^8;

poly W1y12=(y(1)^2 - 2*y(2))*(y(1)^8 - 8*y(1)^6*y(2) + 19*y(1)^4*y(2)^2 - 12*y(1)^2*y(2)^3 + y(2)^4);

poly W3x34=x(3)^10 + x(4)^10;

poly W4y56=(y(5)^2 - 2*y(6))*(y(5)^8 - 8*y(5)^6*y(6) + 19*y(5)^4*y(6)^2 - 12*y(5)^2*y(6)^3 + y(6)^4);

// Defect No.3:

matrix y56Dx34[4][4]=0, 0, -x(3) - x(4) + y(5), -(x(3)*x(4)) + y(6),0, 0, -2*x(3)^4*x(4)^4 + 25*x(3)^3*x(4)^3*y(5)^2 - 50*x(3)^2*x(4)^2*y(5)^4 + 35*x(3)*x(4)*y(5)^6 - 10*y(5)^8 - 2*x(3)^3*x(4)^3*y(6) + 25*x(3)^2*x(4)^2*y(5)^2*y(6) - 50*x(3)*x(4)*y(5)^4*y(6) + 35*y(5)^6*y(6) - 2*x(3)^2*x(4)^2*y(6)^2 + 25*x(3)*x(4)*y(5)^2*y(6)^2 - 50*y(5)^4*y(6)^2 - 2*x(3)*x(4)*y(6)^3 + 25*y(5)^2*y(6)^3 - 2*y(6)^4, -x(3)^9 + x(3)^8*x(4) - x(3)^7*x(4)^2 + x(3)^6*x(4)^3 - x(3)^5*x(4)^4 - x(3)^4*x(4)^5 + x(3)^3*x(4)^6 - x(3)^2*x(4)^7 + x(3)*x(4)^8 - x(4)^9 - x(3)^8*y(5) + 2*x(3)^7*x(4)*y(5) - 3*x(3)^6*x(4)^2*y(5) + 4*x(3)^5*x(4)^3*y(5) - 5*x(3)^4*x(4)^4*y(5) + 4*x(3)^3*x(4)^5*y(5) - 3*x(3)^2*x(4)^6*y(5) + 2*x(3)*x(4)^7*y(5) - x(4)^8*y(5) - x(3)^7*y(5)^2 + 3*x(3)^6*x(4)*y(5)^2 - 6*x(3)^5*x(4)^2*y(5)^2 + 10*x(3)^4*x(4)^3*y(5)^2 + 10*x(3)^3*x(4)^4*y(5)^2 - 6*x(3)^2*x(4)^5*y(5)^2 + 3*x(3)*x(4)^6*y(5)^2 - x(4)^7*y(5)^2 - x(3)^6*y(5)^3 + 4*x(3)^5*x(4)*y(5)^3 - 10*x(3)^4*x(4)^2*y(5)^3 + 20*x(3)^3*x(4)^3*y(5)^3 - 10*x(3)^2*x(4)^4*y(5)^3 + 4*x(3)*x(4)^5*y(5)^3 - x(4)^6*y(5)^3 - x(3)^5*y(5)^4 + 5*x(3)^4*x(4)*y(5)^4 - 15*x(3)^3*x(4)^2*y(5)^4 - 15*x(3)^2*x(4)^3*y(5)^4 + 5*x(3)*x(4)^4*y(5)^4 - x(4)^5*y(5)^4 - x(3)^4*y(5)^5 + 6*x(3)^3*x(4)*y(5)^5 - 21*x(3)^2*x(4)^2*y(5)^5 + 6*x(3)*x(4)^3*y(5)^5 - x(4)^4*y(5)^5 - x(3)^3*y(5)^6 + 7*x(3)^2*x(4)*y(5)^6 + 7*x(3)*x(4)^2*y(5)^6 - x(4)^3*y(5)^6 - x(3)^2*y(5)^7 + 8*x(3)*x(4)*y(5)^7 - x(4)^2*y(5)^7 - x(3)*y(5)^8 - x(4)*y(5)^8 - y(5)^9,x(3)^9 - x(3)^8*x(4) + x(3)^7*x(4)^2 - x(3)^6*x(4)^3 + x(3)^5*x(4)^4 + x(3)^4*x(4)^5 - x(3)^3*x(4)^6 + x(3)^2*x(4)^7 - x(3)*x(4)^8 + x(4)^9 + x(3)^8*y(5) - 2*x(3)^7*x(4)*y(5) + 3*x(3)^6*x(4)^2*y(5) - 4*x(3)^5*x(4)^3*y(5) + 5*x(3)^4*x(4)^4*y(5) - 4*x(3)^3*x(4)^5*y(5) + 3*x(3)^2*x(4)^6*y(5) - 2*x(3)*x(4)^7*y(5) + x(4)^8*y(5) + x(3)^7*y(5)^2 - 3*x(3)^6*x(4)*y(5)^2 + 6*x(3)^5*x(4)^2*y(5)^2 - 10*x(3)^4*x(4)^3*y(5)^2 - 10*x(3)^3*x(4)^4*y(5)^2 + 6*x(3)^2*x(4)^5*y(5)^2 - 3*x(3)*x(4)^6*y(5)^2 + x(4)^7*y(5)^2 + x(3)^6*y(5)^3 - 4*x(3)^5*x(4)*y(5)^3 + 10*x(3)^4*x(4)^2*y(5)^3 - 20*x(3)^3*x(4)^3*y(5)^3 + 10*x(3)^2*x(4)^4*y(5)^3 - 4*x(3)*x(4)^5*y(5)^3 + x(4)^6*y(5)^3 + x(3)^5*y(5)^4 - 5*x(3)^4*x(4)*y(5)^4 + 15*x(3)^3*x(4)^2*y(5)^4 + 15*x(3)^2*x(4)^3*y(5)^4 - 5*x(3)*x(4)^4*y(5)^4 + x(4)^5*y(5)^4 + x(3)^4*y(5)^5 - 6*x(3)^3*x(4)*y(5)^5 + 21*x(3)^2*x(4)^2*y(5)^5 - 6*x(3)*x(4)^3*y(5)^5 + x(4)^4*y(5)^5 + x(3)^3*y(5)^6 - 7*x(3)^2*x(4)*y(5)^6 - 7*x(3)*x(4)^2*y(5)^6 + x(4)^3*y(5)^6 + x(3)^2*y(5)^7 - 8*x(3)*x(4)*y(5)^7 + x(4)^2*y(5)^7 + x(3)*y(5)^8 + x(4)*y(5)^8 + y(5)^9, -(x(3)*x(4)) + y(6), 0, 0,-2*x(3)^4*x(4)^4 + 25*x(3)^3*x(4)^3*y(5)^2 - 50*x(3)^2*x(4)^2*y(5)^4 + 35*x(3)*x(4)*y(5)^6 - 10*y(5)^8 - 2*x(3)^3*x(4)^3*y(6) + 25*x(3)^2*x(4)^2*y(5)^2*y(6) - 50*x(3)*x(4)*y(5)^4*y(6) + 35*y(5)^6*y(6) - 2*x(3)^2*x(4)^2*y(6)^2 + 25*x(3)*x(4)*y(5)^2*y(6)^2 - 50*y(5)^4*y(6)^2 - 2*x(3)*x(4)*y(6)^3 + 25*y(5)^2*y(6)^3 - 2*y(6)^4, x(3) + x(4) - y(5), 0, 0;


matrix defect3 = subst( y56Dx34, y(5),y(3), y(6),y(4), x(3),x(1), x(4),x(2) );
poly W4 = subst( W4y56, y(5),y(3), y(6),y(4) );

setring R1;
matrix defect3 = imap(R2,defect3);
poly W4 = imap(R2,W4);

// MF No. 1:
matrix MF1[2][2]=0, x(1)^2 - ((1 + r)^2*x(2))/r,(x(1)^2 - ((1 + r^3)^2*x(2))/r^3)*(x(1)^2 - ((1 + r^5)^2*x(2))/r^5)*(x(1)^2 - ((1 + r^7)^2*x(2))/r^7)*(x(1)^2 - ((1 + r^9)^2*x(2))/r^9), 0;

// MF No. 2:
matrix MF2[2][2]=0, (x(1)^2 - ((1 + r)^2*x(2))/r)*(x(1)^2 - ((1 + r^3)^2*x(2))/r^3),(x(1)^2 - ((1 + r^5)^2*x(2))/r^5)*(x(1)^2 - ((1 + r^7)^2*x(2))/r^7)*(x(1)^2 - ((1 + r^9)^2*x(2))/r^9), 0;


////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
// Here the actual computations start:


// Fusion defect1 * defect2:
//
//    ---y(1,2)---> defect1 ----x(1,2)----> defect2 ---y(3,4)--->
//

list e1 = list( 0, 1, list(y(1),y(2)), W1 );
list e2 = list( 1, 2, list(x(1),x(2)), W2 );
list e3 = list( 2, 0, list(y(3),y(4)), W3 );
list web = list( 3, list(e1,e2,e3), list(defect1,defect2) );
list compStrat = list(1,2), list(x(1),x(2));

list L = webCompilePair(web, compStrat);
def fusion12 = L[1];
matrix defect12 = subst(fusion12,y(3),x(1),y(4),x(2));

// Fusion defect12 * defect3:
//
//    ---y(1,2)---> defect12 ----x(1,2)----> defect3 ---y(3,4)--->
//

list es1 = list( 0, 1, list(y(1),y(2)), W1 );
list es2 = list( 1, 2, list(x(1),x(2)), W2 );
list es3 = list( 2, 0, list(y(3),y(4)), W4 );
list web2 = list( 3, list(es1,es2,es3), list(defect12,defect3) );
list compStrat = list(1,2), list(x(1),x(2));

list L2 = webCompilePair(web2, compStrat);
def fusion123 = L2[1];

// The result for fusion123 (after running for 1.3 hours on Nils' laptop) is a huge (8x8)-matrix.
// MYSTERY: Running the same example on landi (3 GHz, 8 GB memory and thus supposedly better than 
//          my laptop) does not terminate within 16 hours!

// Define defect D as fusion123 with renamed variables:
matrix D' = subst( fusion123, y(1),x(1), y(2),x(2) );
matrix D  = subst( D', y(3),y(1), y(4),y(2) );


ring R3=(0,r),(x(1..2),y(1..2)),dp;
minpoly = rootofUnity(20); 
poly minpolyblow = 1 - x(1)^2 + x(1)^4 - x(1)^6 + x(1)^8;

matrix D = imap(R1,D);
matrix MF1 = imap(R1,MF1);
matrix MF2 = imap(R1,MF2);

poly W = x(1)^10-10*x(1)^8*x(2)+35*x(1)^6*x(2)^2-50*x(1)^4*x(2)^3+25*x(1)^2*x(2)^4-2*x(2)^5;
poly W4 = (y(1)^2 - 2*y(2))*(y(1)^8 - 8*y(1)^6*y(2) + 19*y(1)^4*y(2)^2 - 12*y(1)^2*y(2)^3 + y(2)^4);


// Fusion MF1 * D:
//
//    ---()---> MF1 ----x(1,2)----> D ---y(1,2)--->
//

// Define edges, web and compilation strategy:
list e2 = list( 1, 2, list(x(1),x(2)), W );
list e3 = list( 2, 0, list(y(1),y(2)), W4 );
list web = list( 3, list(e2,e3), list(MF1,D) );
list compStrat = list(1,2), list(x(1),x(2));


// Compute the fusion:
list L = webCompilePair(web, compStrat);
def MF1D = L[1];


// The fusion MF1 * D ran on Nils' laptop for 14 hours and did not get beyond:
//     > list L = webCompilePair(web, compStrat);
//     [mfPushforwardInductive] In step 1 with ring vars x(1),x(2),y(1),y(2)
//     [mfPushforward] Pushing forward matrix of size 16 with N = 15
//     [mfReduce] Reducing matrix of size 240


// TODO: Compute MF1 * D, 
//               MF2 * D,
//               D * D,
//               D * D * D,
//               D * D * D * D.
