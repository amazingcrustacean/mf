option(noredefine);option(noloadLib);option(redSB);
LIB "ring.lib";
LIB "blow.lib";
int nx=2;
int ny=4;
ring RRRR=(0,r),(x(1..nx),y(1..ny)),dp;
minpoly = rootofUnity(8);
poly minpolyblow = x(1)^4 + 1;
printlevel=1;

poly Wx = x(1)^4+x(2)^4;

poly JaXdY=x(1)+x(2)-y(1);
poly JbXdY=x(1)*x(2)-y(2);
poly EaXdY=(x(1) + x(2) + y(1))*((x(1) - x(2))^2 + y(1)^2);
poly EbXdY=2*(x(1)*x(2) - 2*y(1)^2 + y(2));
matrix xDy[4][4]=
   0,0, JaXdY,JbXdY ,
   0,0, EbXdY,-EaXdY,
   EaXdY,JbXdY ,0,0,
   EbXdY,-JaXdY;

poly JaXyDonex= y(3) + y(4)*r^2 - x(1) - x(2);
poly JbXyDonex=y(3)*y(4)*r^2 - x(1)*x(2);
poly EaXyDonex=(x(1) + y(3) + x(2) + y(4)*r^2)*((x(1) + x(2))^2 + (y(3) - y(4)*r^2)^2);
poly EbXyDonex=-4*x(1)^2 - 6*x(1)*x(2) - 4*x(2)^2 + 2*y(3)*y(4)*r^2;
matrix XyDonex[4][4]=
   0,0, JaXyDonex,JbXyDonex ,
   0,0, EbXyDonex,-EaXyDonex,
   EaXyDonex, JbXyDonex,0,0,
   EbXyDonex,-JaXyDonex;

list lXyDonexxDy = fuseDefects(XyDonex,xDy, Wx);
matrix RXyDonexxDy = lXyDonexxDy[1]; // Reduced inflation of Y x X
matrix epXyDonexxDy = lXyDonexxDy[2]; // Idempotent endomorphism of RXyDonexxDy

// Unfortunately the (32x32)-matrix epXyDonexxDy is not an idempotent on
// the nose (but only up to homotopy):
print(epXyDonexxDy * epXyDonexxDy == epXyDonexxDy);

// Strictify the idempotent. ep is homotopic to epXyDonexxDy but actually
// idempotent on the nose.
matrix ep = mfStrictifyIdempotent(RXyDonexxDy, epXyDonexxDy);
print(ep * ep == ep);

matrix final = mfSuspend( mfSplitIdempotent(RXyDonexxDy, ep), nx );
print(final);

// This gives:

final[1,1]=0
final[1,2]=0
final[1,3]=0
final[1,4]=0
final[1,5]=1/3*y(1)^2+25/9*y(1)*y(3)-16/9*y(3)^2+(19/9*r^2)*y(1)*y(4)+(-32/9*r^2)*y(3)*y(4)+10/9*y(4)^2-2/3*y(2)
final[1,6]=-4780/3*y(1)^3+49220/3*y(1)^2*y(3)-1020532/45*y(1)*y(3)^2+177004/15*y(3)^3+(33163/6*r^2)*y(1)^2*y(4)+(-860639/180*r^2)*y(1)*y(3)*y(4)+(-25163/180*r^2)*y(3)^2*y(4)+844147841/121320*y(1)*y(4)^2+837442393/121320*y(3)*y(4)^2+(-125551567/40440*r^2)*y(4)^3-592*y(1)*y(2)-1364*y(2)*y(3)+(558*r^2)*y(2)*y(4)
final[1,7]=(12596*r^2)*y(1)^3+(-392738/3*r^2)*y(1)^2*y(3)+(2705482/15*r^2)*y(1)*y(3)^2+(-4196996/45*r^2)*y(3)^3+267103/6*y(1)^2*y(4)-788863/20*y(1)*y(3)*y(4)-62179/180*y(3)^2*y(4)+(-2250746131/40440*r^2)*y(1)*y(4)^2+(-6566118209/121320*r^2)*y(3)*y(4)^2-2965349173/121320*y(4)^3+(4592*r^2)*y(1)*y(2)+(103208/9*r^2)*y(2)*y(3)+35962/9*y(2)*y(4)
final[1,8]=(237729680*r^2)*y(1)^4+(-17323629724/9*r^2)*y(1)^3*y(3)+(99328251712/45*r^2)*y(1)^2*y(3)^2+(9591928256/45*r^2)*y(1)*y(3)^3+(-3533470332/5*r^2)*y(3)^4+5973531520/9*y(1)^3*y(4)-34303862917/90*y(1)^2*y(3)*y(4)+433074883283/180*y(1)*y(3)^2*y(4)-94886848709/36*y(3)^3*y(4)+(-13220328036757/15165*r^2)*y(1)^2*y(4)^2+(30479674364257/121320*r^2)*y(1)*y(3)*y(4)^2+(57332603628563/40440*r^2)*y(3)^2*y(4)^2-4298216214293/12132*y(1)*y(4)^3+235218943784111/121320*y(3)*y(4)^3+(-8907040499083/60660*r^2)*y(4)^4+(-556632344*r^2)*y(1)^2*y(2)+(7572144952/3*r^2)*y(1)*y(2)*y(3)+(-125087391884/45*r^2)*y(2)*y(3)^2-1273374520/3*y(1)*y(2)*y(4)-161188982938/45*y(2)*y(3)*y(4)+(961951205796/1685*r^2)*y(2)*y(4)^2+(83513328*r^2)*y(2)^2
final[2,1]=0
final[2,2]=0
final[2,3]=0
final[2,4]=0
final[2,5]=203/496640*y(1)-203/496640*y(3)+(-203/496640*r^2)*y(4)
final[2,6]=1479843/1241600*y(1)^2-85690099/41841920*y(1)*y(3)+543503459/418419200*y(3)^2+(321170383/836838400*r^2)*y(1)*y(4)+(-49004527/836838400*r^2)*y(3)*y(4)+189593089/167367680*y(4)^2-1693/7760*y(2)
final[2,7]=(-11927619/1241600*r^2)*y(1)^2+(1370760081/83683840*r^2)*y(1)*y(3)+(-2150482541/209209600*r^2)*y(3)^2+2399722809/836838400*y(1)*y(4)-263514411/836838400*y(3)*y(4)+(-1501078691/167367680*r^2)*y(4)^2+(14591/7760*r^2)*y(2)
final[2,8]=(-22966519331/155200*r^2)*y(1)^3+(109824716441171/418419200*r^2)*y(1)^2*y(3)+(-3933089076101/104604800*r^2)*y(1)*y(3)^2+(-23105313464271/418419200*r^2)*y(3)^3+976291887643/41841920*y(1)^2*y(4)+235333109268679/836838400*y(1)*y(3)*y(4)-282417194497231/836838400*y(3)^2*y(4)+(-11983740262291/418419200*r^2)*y(1)*y(4)^2+(101078361124093/836838400*r^2)*y(3)*y(4)^2+14057810427623/83683840*y(4)^3+(40721015589/310400*r^2)*y(1)*y(2)+(-29173403705107/104604800*r^2)*y(2)*y(3)-8346285087057/20920960*y(2)*y(4)
final[3,1]=0
final[3,2]=0
final[3,3]=0
final[3,4]=0
final[3,5]=(-227/4469760*r^2)*y(1)+(227/4469760*r^2)*y(3)-227/4469760*y(4)
final[3,6]=(-576409/3724800*r^2)*y(1)^2+(312283/1117440*r^2)*y(1)*y(3)+(-729641/3724800*r^2)*y(3)^2+1311539117/6025236480*y(1)*y(4)-4258503649/30126182400*y(3)*y(4)+(-1008389873/3347353600*r^2)*y(4)^2+(273/7760*r^2)*y(2)
final[3,7]=-4642297/3724800*y(1)^2+1663619/744960*y(1)*y(3)-8661277/5587200*y(3)^2+(-3417919039/2008412160*r^2)*y(1)*y(4)+(3683427633/3347353600*r^2)*y(3)*y(4)-71843932361/30126182400*y(4)^2+20779/69840*y(2)
final[3,8]=-25418091259/1396800*y(1)^3+407512592587/11174400*y(1)^2*y(3)-16997576797/2793600*y(1)*y(3)^2-10805941743/1241600*y(3)^3+(-47152430113807/1882886400*r^2)*y(1)^2*y(4)+(-35102127629291/1205047296*r^2)*y(1)*y(3)*y(4)+(1771012441265939/30126182400*r^2)*y(3)^2*y(4)-197118346658681/15063091200*y(1)*y(4)^2+1058506229913527/30126182400*y(3)*y(4)^2+(-515489623974431/15063091200*r^2)*y(4)^3+13822364207/931200*y(1)*y(2)-120645844379/2793600*y(2)*y(3)+(9736208872693/104604800*r^2)*y(2)*y(4)
final[4,1]=0
final[4,2]=0
final[4,3]=0
final[4,4]=0
final[4,5]=0
final[4,6]=(-59/3347353600*r^2)*y(1)+(59/3347353600*r^2)*y(3)-59/3347353600*y(4)
final[4,7]=-467/3347353600*y(1)+467/3347353600*y(3)+(467/3347353600*r^2)*y(4)
final[4,8]=-15397/6537800*y(1)^2+2887543/3347353600*y(1)*y(3)+4995721/3347353600*y(3)^2+(337239/334735360*r^2)*y(1)*y(4)+(-6259933/3347353600*r^2)*y(3)*y(4)-2255437/1673676800*y(4)^2+15397/3268900*y(2)
final[5,1]=-27/8*y(1)^2+213/64*y(1)*y(3)+3/64*y(3)^2+(213/64*r^2)*y(1)*y(4)+(-93/32*r^2)*y(3)*y(4)-3/64*y(4)^2+3*y(2)
final[5,2]=-71617/8*y(1)^3+1129563/64*y(1)^2*y(3)+7761075/512*y(1)*y(3)^2-9108299/512*y(3)^3+(4850331/64*r^2)*y(1)^2*y(4)+(-14618029/256*r^2)*y(1)*y(3)*y(4)+(-14402337/512*r^2)*y(3)^2*y(4)+1574696157/45568*y(1)*y(4)^2-1406449311/45568*y(3)*y(4)^2+(1194393595/45568*r^2)*y(4)^3+796107/16*y(1)*y(2)-138315/16*y(2)*y(3)+(-1216971/16*r^2)*y(2)*y(4)
final[5,3]=(596097/8*r^2)*y(1)^3+(1482597/64*r^2)*y(1)^2*y(3)+(-131722995/512*r^2)*y(1)*y(3)^2+(62386059/512*r^2)*y(3)^3+31299291/64*y(1)^2*y(4)-53277549/256*y(1)*y(3)*y(4)-177246177/512*y(3)^2*y(4)+(-8500682397/45568*r^2)*y(1)*y(4)^2+(7627897311/45568*r^2)*y(3)*y(4)^2+8669034555/45568*y(4)^3+(-6171147/16*r^2)*y(1)*y(2)+(-576885/16*r^2)*y(2)*y(3)-8734731/16*y(2)*y(4)
final[5,4]=(-353927725680*r^2)*y(1)^4+(1832874752970*r^2)*y(1)^3*y(3)+(-8479760714835/4*r^2)*y(1)^2*y(3)^2+(635288272110*r^2)*y(1)*y(3)^3+(298152426435/4*r^2)*y(3)^4+4408668014199/8*y(1)^3*y(4)+67512889236579/64*y(1)^2*y(3)*y(4)-1609412123398245/512*y(1)*y(3)^2*y(4)+596148157258893/512*y(3)^3*y(4)+(-16311992191639173/5696*r^2)*y(1)^2*y(4)^2+(35776088623238787/22784*r^2)*y(1)*y(3)*y(4)^2+(91474996984625871/45568*r^2)*y(3)^2*y(4)^2-8188623542151819/45568*y(1)*y(4)^3+21288424185616857/45568*y(3)*y(4)^3+(-71027003925900765/45568*r^2)*y(4)^4+(217422384360*r^2)*y(1)^2*y(2)+(-1892742756240*r^2)*y(1)*y(2)*y(3)+(944046011670*r^2)*y(2)*y(3)^2-55798474186509/16*y(1)*y(2)*y(4)+4872347110605/16*y(2)*y(3)*y(4)+(5649810691894053/1424*r^2)*y(2)*y(4)^2+(-53191540800*r^2)*y(2)^2
final[5,5]=0
final[5,6]=0
final[5,7]=0
final[5,8]=0
final[6,1]=-1401/22144*y(1)+1401/22144*y(3)+(1401/22144*r^2)*y(4)
final[6,2]=-260279/5536*y(1)^2+13340041057/15766528*y(1)*y(3)+1744126079/15766528*y(3)^2+(32949397393/15766528*r^2)*y(1)*y(4)+(-128590657/88576*r^2)*y(3)*y(4)+17865230257/15766528*y(4)^2-83116/173*y(2)
final[6,3]=(4393719/5536*r^2)*y(1)^2+(-52806810657/15766528*r^2)*y(1)*y(3)+(-48955894719/15766528*r^2)*y(3)^2+223726282833/15766528*y(1)*y(4)-642615297/88576*y(3)*y(4)+(-121963577457/15766528*r^2)*y(4)^2+(525276/173*r^2)*y(2)
final[6,4]=(-1654709988420/173*r^2)*y(1)^3+(4232108848429095/123176*r^2)*y(1)^2*y(3)+(-713001202742040/15397*r^2)*y(1)*y(3)^2+(1963922674969065/123176*r^2)*y(3)^3+4689546237749757/492704*y(1)^2*y(4)-163982504203246119/15766528*y(1)*y(3)*y(4)-379761949405855353/15766528*y(3)^2*y(4)+(-1492358244352990071/15766528*r^2)*y(1)*y(4)^2+(428062281992522991/7883264*r^2)*y(3)*y(4)^2-761536662964797399/15766528*y(4)^3+(853685003040/173*r^2)*y(1)*y(2)+(-26634874300515/15397*r^2)*y(2)*y(3)+314534825826903/15397*y(2)*y(4)
final[6,5]=0
final[6,6]=0
final[6,7]=0
final[6,8]=0
final[7,1]=(177/22144*r^2)*y(1)+(-177/22144*r^2)*y(3)+177/22144*y(4)
final[7,2]=(43647/5536*r^2)*y(1)^2+(-19062777/177152*r^2)*y(1)*y(3)+(-2694119/177152*r^2)*y(3)^2+4175885881/15766528*y(1)*y(4)-1458059013/7883264*y(3)*y(4)+(-2239522137/15766528*r^2)*y(4)^2+(9828/173*r^2)*y(2)
final[7,3]=641727/5536*y(1)^2-75976377/177152*y(1)*y(3)-71251239/177152*y(3)^2+(-28370752761/15766528*r^2)*y(1)*y(4)+(7323598533/7883264*r^2)*y(3)*y(4)-15267494937/15766528*y(4)^2+60948/173*y(2)
final[7,4]=-208836291620/173*y(1)^3+6043078909775/1384*y(1)^2*y(3)-1013751978040/173*y(1)*y(3)^2+2770908912705/1384*y(3)^3+(-664964959549781/492704*r^2)*y(1)^2*y(4)+(21326083665888631/15766528*r^2)*y(1)*y(3)*y(4)+(49744327020842537/15766528*r^2)*y(3)^2*y(4)-189540207769257487/15766528*y(1)*y(4)^2+55135043016372451/7883264*y(3)*y(4)^2+(94812659883761519/15766528*r^2)*y(4)^3+106179102240/173*y(1)*y(2)-47620302635/173*y(2)*y(3)+(-35286509024919/15397*r^2)*y(2)*y(4)
final[7,5]=0
final[7,6]=0
final[7,7]=0
final[7,8]=0
final[8,1]=0
final[8,2]=(-227/1970816*r^2)*y(1)+(227/1970816*r^2)*y(3)-227/1970816*y(4)
final[8,3]=-1827/1970816*y(1)+1827/1970816*y(3)+(1827/1970816*r^2)*y(4)
final[8,4]=5393685/15397*y(1)^2-20253600/15397*y(1)*y(3)+27935515/15397*y(3)^2+(17620160949/1970816*r^2)*y(1)*y(4)+(-13897968309/1970816*r^2)*y(3)*y(4)+16636875829/1970816*y(4)^2-6537800/15397*y(2)
final[8,5]=0
final[8,6]=0
final[8,7]=0
final[8,8]=0


// Now try the next step:

option(noredefine);option(noloadLib);option(redSB);
LIB "ring.lib";
LIB "blow.lib";
int nx=2;
int ny=4;
ring RR44=(0,r),(x(1..nx),y(1..ny)),dp;
minpoly = rootofUnity(8);
poly minpolyblow = x(1)^4 + 1;
printlevel=1;

poly Wx = x(1)^4+x(2)^4;
// poly WXy = y(3)^4+y(4)^4;
// poly WXx = x(3)^4+x(4)^4;
// poly Wy = y(1)^4-4*y(1)^2*y(2)+2*y(2)^2;
// poly WY = y(3)^4-4*y(3)^2*y(4)+2*y(4)^2;

def finalXxDonexxDy = imap(RRRR,final);

// poly JaYDX =y(3)-x(3)-x(4);
// poly JbYDX =y(4)-x(3)*x(4);
// poly EaYDX =(x(3) + x(4) + y(3))*((x(3) + x(4))^2 + y(3)^2 - 4*y(4));
// poly EbYDX =-4*x(3)^2 - 6*x(3)*x(4) - 4*x(4)^2 + 2*y(4);
// matrix YDX[4][4]=
//     0,0,JaYDX,JbYDX,
//     0,0,EbYDX,-EaYDX,
//     EaYDX,JbYDX,0,0,
//     EbYDX,-JaYDX;

// matrix  YDXXxDonexxDy = MFtensor(YDX,finalXxDonexxDy);

poly JaXyDonex= y(3) + y(4)*r^2 - x(1) - x(2);
poly JbXyDonex=y(3)*y(4)*r^2 - x(1)*x(2);
poly EaXyDonex=(x(1) + y(3) + x(2) + y(4)*r^2)*((x(1) + x(2))^2 + (y(3) - y(4)*r^2)^2);
poly EbXyDonex=-4*x(1)^2 - 6*x(1)*x(2) - 4*x(2)^2 + 2*y(3)*y(4)*r^2;
matrix XyDonex[4][4]=
    0,0, JaXyDonex,JbXyDonex ,
    0,0, EbXyDonex,-EaXyDonex,
    EaXyDonex, JbXyDonex,0,0,
    EbXyDonex,-JaXyDonex;

poly JaXdY=x(1)+x(2)-y(1);
poly JbXdY=x(1)*x(2)-y(2);
poly EaXdY=(x(1) + x(2) + y(1))*((x(1) - x(2))^2 + y(1)^2);
poly EbXdY=2*(x(1)*x(2) - 2*y(1)^2 + y(2));
matrix xDy[4][4]=
    0,0, JaXdY,JbXdY ,
    0,0, EbXdY,-EaXdY,
    EaXdY,JbXdY ,0,0,
    EbXdY,-JaXdY;

matrix  XyDonexxDy = MFtensor(XyDonex,xDy);

list t = varTrans(Wx);
matrix C = t[2];
intvec q = t[1];
ideal J;
for( int i = 1; i <= nx; i++ )
{
    J[i] = x(i)^(q[i]);
}

matrix  D = MFtensor(XyDonex,xDy);
matrix Dblow = mablow(D,J);

// This ran on haydn for 36882.05 seconds:
list l = mfReduce(Dblow,1);
matrix RD = l[1];
matrix F = l[2]; // A homotopy equivalence F: Dblow -> RD
matrix G = l[3]; // A homotopy equivalence G: RD -> Dblow

matrix diff1 = ZZtensor( diff(XyDonex, x(1)), unitmat(ncols(xDy)) );
matrix diff2 = ZZtensor( unitmat(ncols(XyDonex)), diff(xDy, x(2)) );
matrix iddQ = mablow( det(C) * diff1 * diff2, J );

matrix delta1 = mablow_delta(D, 1, 2, J);
matrix delta2 = mablow_delta(D, 2, 2, J);
matrix delQ = delta1 * delta2;

// And finally the idempotent e on Dblow
int sign = (nx * (nx-1)) div 2;
matrix e = (-1)^(sign) * iddQ * delQ;

matrix ep = F * e * G;
ep * RD == RD * ep;
ep * ep == ep;

// Running on haydn (and lully with the other sign for e):

matrix epfinal = mfStrictifyIdempotent(RD, ep);

// Result on both: killed while "[mfStrictifyIdempotent] Looking at order 7"
