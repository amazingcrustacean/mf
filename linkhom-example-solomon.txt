// Solomon's knot ///////////////////////////////////////////
//
// Actually a link, see http://katlas.math.toronto.edu/wiki/Image:L4a1.gif

option(noredefine);option(noloadLib);option(redSB);//option(prot);
LIB "blow.lib";
LIB "linkhom.lib";
LIB "matrix.lib";
LIB "control.lib";
LIB "mfweb.lib";
ring rr=0,(x(1..8)),dp;
int N = 2; // The N in sl(N) link homology
printlevel = 1;

intvec edgevec(1) = 1,2,3,4;
intvec edgevec(2) = 8,3,2,7;
intvec edgevec(3) = 4,5,6,1;
intvec edgevec(4) = 7,6,5,8;
intvec vertexParity = 1,1,1,1;
list solomon = vertexParity, list(edgevec(1),edgevec(2),edgevec(3),edgevec(4));

list h = linkCompile(solomon, "./data/solomon-N" + string(N) + ".mp", N);
list cp = KRcomplex(solomon, h, N);

ring ss=(0,t,q),(x),dp;

list cp = imap(rr,cp);
list cohom = computeCohomology(cp);
number euler = gradedEuler(cohom,q);
euler;

// The KR homology is described by its Poincare polynomial
number poincare = gradedPoincare(cohom, q, t);
poincare;

// Jones polynomial: (q10+q4+q2+1)/(q10)
// Agrees with by-hand calculation.